input {
  # Opción A: tu app envía JSON por TCP al puerto 5000
  tcp {
    port => 5050
    codec => "json_lines"
    tags => ["microservice", "tcp"]
  }
  
  http {
    port => 5051
    codec => "json"
    response_headers => {
      "Access-Control-Allow-Origin" => "*"
      "Access-Control-Allow-Headers" => "Origin, X-Requested-With, Content-Type, Accept"
    }
  }

  # Opción B (opcional): si usas Filebeat
  beats {
    port => 5044
  }
}

filter {
  # Parsear timestamp
  date {
    match => ["timestamp", "ISO8601"]
    target => "@timestamp"
  }

  # Añadir metadatos de microservicio
  if [service] {
    mutate {
      add_field => {
        "[@metadata][index]" => "%{service}-logs-%{+YYYY.MM.dd}"
      }
    }
  } else {
    mutate {
      add_field => {
        "[@metadata][index]" => "unknown-logs-%{+YYYY.MM.dd}"
      }
    }
  }

  # Enriquecer con geoip si hay direcciones IP
  if [client_ip] {
    geoip {
      source => "client_ip"
      target => "geoip"
    }
  }

  # Clasificar logs por nivel
  if [level] {
    mutate {
      lowercase => [ "level" ]
    }
  }
}

output {
  elasticsearch {
    hosts    => [ "http://elasticsearch:9200" ]
    user     => "elastic"
    password => "${ELASTIC_PASSWORD}"
    # Índices diarios (útiles para ILM de logs)
    index => "app-logs-%{+YYYY.MM.dd}"
    document_type => "_doc"
    # template => "/usr/share/logstash/config/elasticsearch-template.json"
    template_name => "microservices-logs"
  }

  # Útil para debug local
  stdout { codec => rubydebug }
}
